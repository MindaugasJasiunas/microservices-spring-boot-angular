server.port=8761
spring.application.name=eureka-service

#Eureka by default runs with cluster (eureka not gonna register thinking its in a cluster of eureka servers ,eureka will not fetch registry from other Eureka servers) - locally we dont need it
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false

eureka.client.service-url.defaultZone=http://localhost:8761/eureka

#Multiple Eureka instances (high availability)
#eureka.client.register-with-eureka=true
#eureka.client.fetch-registry=true
#eureka.client.service-url.defaultZone=http://localhost:8761/eureka, http://localhost:8762/eureka, http://localhost:8763/eureka
# multiple instances on single machine - eureka servers need to be configured with different hostnames, different ports do not suffice. These hostnames must resolve to localhost.
#eureka.instance.hostname=server1

# in some cases preferable to advertise IP address instead of host name (avoid issues with hostname)
#eureka.instance.prefer-ip-address=true
# we can configure hostname explicitly
#eureka.instance.hostname=localhost
# set instance id (allows parallel run few instances without duplicating names)
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

# Spring Cloud Config
spring.config.import=optional:configserver:http://localhost:8888
# disable service discovery if using local
#spring.cloud.discovery.enabled=false

# rabbitMQ config for Spring Cloud Bus to be able to communicate
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest